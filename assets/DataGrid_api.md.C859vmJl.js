import{_ as i,c as s,o as t,ae as e}from"./chunks/framework.Cd-3tpCq.js";const E=JSON.parse('{"title":"API","description":"","frontmatter":{},"headers":[],"relativePath":"DataGrid/api.md","filePath":"DataGrid/api.md"}'),l={name:"DataGrid/api.md"};function n(h,a,d,p,r,o){return t(),s("div",null,a[0]||(a[0]=[e(`<h1 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h1><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2><h3 id="datasource-数据源" tabindex="-1">dataSource 数据源 <a class="header-anchor" href="#datasource-数据源" aria-label="Permalink to &quot;dataSource 数据源&quot;">​</a></h3><p>将数据绑定到DataGrid组件</p><h3 id="allowcolumnreordering-重新排序" tabindex="-1">allowColumnReordering 重新排序 <a class="header-anchor" href="#allowcolumnreordering-重新排序" aria-label="Permalink to &quot;allowColumnReordering 重新排序&quot;">​</a></h3><p>指定用户是否可以对列重新排序，即用户拖动某列的列头，可以拖拽排序。</p><ul><li>default: false</li><li>type: Boolean</li></ul><h3 id="allowcolumnresizing-允许列调整大小" tabindex="-1">allowColumnResizing 允许列调整大小 <a class="header-anchor" href="#allowcolumnresizing-允许列调整大小" aria-label="Permalink to &quot;allowColumnResizing 允许列调整大小&quot;">​</a></h3><p>指定用户是否可以调整列的大小。默认情况，每列的宽度取决于UI组件的宽度和列总数。</p><ul><li>default: false</li><li>type: Boolean</li></ul><h3 id="cacheenabled-缓存" tabindex="-1">cacheEnabled 缓存 <a class="header-anchor" href="#cacheenabled-缓存" aria-label="Permalink to &quot;cacheEnabled 缓存&quot;">​</a></h3><p>指定是否应缓存数据。如果开启，加载一次的数据将保存在缓存中。然后，UI组件在执行排序、分组、分页等操作时从该缓存中获取数据。</p><p>如果频繁更改的数据源，要禁用。当数据源需要大量时间才能加载的时候，这个属性很管用</p><p>如果要更新缓存中的数据，调用UI组件的<a href="#refresh()">refresh()</a>方法或者DataSource的<a href="#reload()">reload()</a>方法</p><ul><li>default: true</li><li>type: Boolean</li></ul><h3 id="remoteoperations-远程操作-待定" tabindex="-1">remoteOperations 远程操作（待定） <a class="header-anchor" href="#remoteoperations-远程操作-待定" aria-label="Permalink to &quot;remoteOperations 远程操作（待定）&quot;">​</a></h3><p>当服务器未实现某些操作（<code>remoteOperations</code>为<code>false</code>时），它们将在客户端上执行。UI组件可能会在执行客户端操作时向服务器发送查询。</p><h3 id="rowalternationenabled-行交替着色-即斑马纹" tabindex="-1">rowAlternationEnabled 行交替着色 即斑马纹 <a class="header-anchor" href="#rowalternationenabled-行交替着色-即斑马纹" aria-label="Permalink to &quot;rowAlternationEnabled 行交替着色 即斑马纹&quot;">​</a></h3><p>指定是否应该以不同的方式对行进行着色</p><ul><li>default：false</li><li>type：boolean</li></ul><h3 id="showborders-显示边框" tabindex="-1">showBorders 显示边框 <a class="header-anchor" href="#showborders-显示边框" aria-label="Permalink to &quot;showBorders 显示边框&quot;">​</a></h3><p>指定UI组件的外部边框是否可见</p><ul><li>default：false</li><li>type：Boolean</li></ul><h3 id="width-宽度" tabindex="-1">width 宽度 <a class="header-anchor" href="#width-宽度" aria-label="Permalink to &quot;width 宽度&quot;">​</a></h3><p>指定UI组件的宽度</p><ul><li>default：undefined</li><li>type：Number | String | undefined</li></ul><h3 id="onOptionChanged" tabindex="-1">onOptionChanged <a class="header-anchor" href="#onOptionChanged" aria-label="Permalink to &quot;onOptionChanged {#onOptionChanged}&quot;">​</a></h3><p>更改UI组件属性后执行的函数</p><h3 id="keyexpr-主键" tabindex="-1">keyExpr 主键 <a class="header-anchor" href="#keyexpr-主键" aria-label="Permalink to &quot;keyExpr 主键&quot;">​</a></h3><p>指定提供键值以访问数据项的键属性。每个键值必须是唯一的，仅当<code>data</code>是简单数组时，此属性才适用。</p><ul><li>default：undefined</li><li>type：String | String[] | undefined</li></ul><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="reload()" tabindex="-1">reload() <a class="header-anchor" href="#reload()" aria-label="Permalink to &quot;reload() {#reload()}&quot;">​</a></h3><p>清除当前加载的DataSource项并调用load()方法</p><p>DataSource从当前页面索引重新加载数据。要重新加载所有数据，在调用<code>reload()</code>方法之前将<code>pageIndex</code>设置为0</p><p>从此方法返回的<code>Promise</code>使用<code>operationId</code>字段进行扩展，可以使用改字段来取消调用的操作。<code>cancel(operationId)</code></p><h3 id="refresh()" tabindex="-1">refresh() <a class="header-anchor" href="#refresh()" aria-label="Permalink to &quot;refresh() {#refresh()}&quot;">​</a></h3><p>重新加载数据并重新绘制数据行</p><p><code>refresh()</code>调用<code>dataSource.reload()</code>并刷新组件属性。如果<code>repaintChangedOnly</code>为<code>false</code>（默认），则这个方法还会重新绘制所有数据行。</p><p>DataGrid无法跟踪在组件外部应用的数据源更改。若要在这种情况下更新组件，调用<code>refresh()</code>方法</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;domRef&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> domRef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;null&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">domRef.value.instance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">refresh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li>在编辑模式下调用<code>refresh()</code>方法会丢弃为保存的更改并取消编辑模式。编辑时，mode为batch，则组件会取消编辑模式，但不会丢弃为保存的更改。</li><li><code>refresh()</code>在编辑时不会重新绘制编辑弹出窗口，mode为popup</li><li>如果DataGrid在Promise正在进行时访问其dataSource，则组件可能会reject刷新promise，为避免reject刷新promise，请修改在刷新完成后启动数据查询的属性。</li></ul><h2 id="columns" tabindex="-1">Columns <a class="header-anchor" href="#columns" aria-label="Permalink to &quot;Columns&quot;">​</a></h2><h3 id="format-格式-待定" tabindex="-1">format 格式（待定） <a class="header-anchor" href="#format-格式-待定" aria-label="Permalink to &quot;format 格式（待定）&quot;">​</a></h3><p>在值显示在列单元格中之前设置值的格式</p><ul><li>default：*</li></ul><h3 id="celltemplate" tabindex="-1">cellTemplate <a class="header-anchor" href="#celltemplate" aria-label="Permalink to &quot;cellTemplate&quot;">​</a></h3><p>指定数据单元格的自定义模板</p><p>template中的数据</p><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>column 列</td><td>DataGrid Column</td><td>列的属性</td></tr><tr><td>columnIndex 列索引</td><td>Number</td><td>单元格列的索引</td></tr><tr><td>component 组件</td><td>DataGrid</td><td>UI组件的实例</td></tr><tr><td>data 数据</td><td>Object</td><td>单元格所属行的数据</td></tr><tr><td>displayValue</td><td>any</td><td>单元格的显示值。仅当列使用<code>lookup</code>或者<code>calculateDisplayValue</code>时，才与<code>value</code>字段不同</td></tr><tr><td>oldValue</td><td>any</td><td>单元格的旧值，仅当<code>repaintChangedOnly</code>为<code>true</code>时定义</td></tr><tr><td>row 行</td><td>DataGrid Row</td><td>单元格的行</td></tr><tr><td>rowIndex 行索引</td><td>Number</td><td>单元格行的索引，每页上从0开始。</td></tr><tr><td>rowType 行类型</td><td>String</td><td>行的类型</td></tr><tr><td>text 文本</td><td>String</td><td>displayValue的intent和customizeText之后</td></tr><tr><td>value 值</td><td>any</td><td>单元格的原始值</td></tr><tr><td>watch 监听</td><td>Function</td><td>允许跟踪变量并响应值更改。当<code>repaintChangesOnly</code>为<code>true</code>时应用</td></tr></tbody></table><h3 id="cssclass-css类" tabindex="-1">cssClass css类 <a class="header-anchor" href="#cssclass-css类" aria-label="Permalink to &quot;cssClass css类&quot;">​</a></h3><p>指定要应用于列的CSS类</p><ul><li>default：undefined</li><li>type：String | undefined</li></ul><p>下面代码，这个属性分配了一个<code>cell-highlighted</code>CSS类，用于自定义<code>location</code>列的单元格和标题样式。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DxDataGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data-source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">employees</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DxColumn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> data-field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ID&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DxColumn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> data-field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;position&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> css-class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cell-highlighted&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DxDataGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dx-data-row</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> .cell-highlighted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#e6e6e6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dx-header-row</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> .cell-highlighted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">gray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">italic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="caption-标题" tabindex="-1">caption 标题 <a class="header-anchor" href="#caption-标题" aria-label="Permalink to &quot;caption 标题&quot;">​</a></h3><p>指定列的标题，使用这个属性可以显示列的描述性名称。如果没有设置这个属性，则将根据<code>dataField</code>的名称生成标题</p><ul><li>default：undefined</li><li>type：String | undefined</li></ul><h3 id="groupindex-组索引" tabindex="-1">groupIndex 组索引 <a class="header-anchor" href="#groupindex-组索引" aria-label="Permalink to &quot;groupIndex 组索引&quot;">​</a></h3><p>指定按照网格记录按照改列的值分组时列的索引。</p><p>用户可以使用<a href="#contextMenuEnabled">context menu</a>或者<a href="#groupPanel">group panel</a>。但在某些情况下，最初必须对网格记录进行分组。将整数值分配给应用于对网格记录进行分组的列的<code>groupIndex</code>属性。</p><ul><li>default：undefined</li><li>type：Number | undefined</li><li>引发的事件：<a href="#onOptionChanged">onOptionChanged</a></li></ul><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DxDataGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ... &gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DxColumn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      data-field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;FirstName&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">group-index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DxColumn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      data-field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LastName&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">group-index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DxDataGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dataSource</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { FirstName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;John&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, LastName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Doe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Sales Manager&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { FirstName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Michael&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, LastName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;King&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Sales Representative&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="datafield-数据字段" tabindex="-1">dataField 数据字段 <a class="header-anchor" href="#datafield-数据字段" aria-label="Permalink to &quot;dataField 数据字段&quot;">​</a></h3><p>将列绑定到dataSource的字段</p><ul><li>default：undefined</li><li>type：String | undefined</li></ul><p>columns数组可以包含列对象和数据字段名称作为字符串。如果使用列对象，请指定dataField属性以将对象绑定到数据源中的列。</p><h3 id="datatype-数据类型" tabindex="-1">dataType 数据类型 <a class="header-anchor" href="#datatype-数据类型" aria-label="Permalink to &quot;dataType 数据类型&quot;">​</a></h3><p>将列值强制转换为特定数据类型</p><ul><li>default：undefined</li><li>type：string | number | date | boolean | object | datetime | undefined</li></ul><p>如果数据字段提供一种数据类型的值，但是UI组件应该将其强制转换为另一种数据类型，请在次数行中指定正确的类型。</p><div class="tip custom-block github-alert"><p class="custom-block-title">注意</p><p>boolean：DataGrid在单元格中呈现CheckBox组件 number：改组件将值和标题与列的右侧对齐 object：</p><blockquote><ul><li>该组件实现了toString()方法来显示字段。要集成自定义显示逻辑，实现<code>columns[].calculateCellValue</code>或者<code>calculateDisplayValue</code></li><li>DataGrid不会为filterRow生成filterOperations</li><li>组件的filterBuilder仅仅包括扩展的过滤器操作：<code>anyof</code> <code>noneof</code> <code>isblank</code> <code>isnotblank</code></li></ul></blockquote></div><h3 id="alignment" tabindex="-1">alignment 对齐 <a class="header-anchor" href="#alignment" aria-label="Permalink to &quot;alignment 对齐 {#alignment}&quot;">​</a></h3><p>对齐列的内容</p><ul><li>default：undefined</li><li>type：undefined | center | left | right</li></ul><p>内容的默认对齐方式取决于数据类型</p><table tabindex="0"><thead><tr><th>数据类型</th><th>对齐</th></tr></thead><tbody><tr><td>number</td><td>right</td></tr><tr><td>boolean</td><td>center</td></tr><tr><td>string</td><td>left</td></tr><tr><td>date</td><td>left</td></tr><tr><td>datetime</td><td>left</td></tr></tbody></table><h3 id="allowgrouping-允许分组" tabindex="-1">allowGrouping 允许分组 <a class="header-anchor" href="#allowgrouping-允许分组" aria-label="Permalink to &quot;allowGrouping 允许分组&quot;">​</a></h3><p>用户是否可以按此列的值对数据进行分组，仅在启用分组时适用</p><ul><li>default：true</li><li>type：boolean</li></ul><p>在UI组件中启用分组后，用户可以按照任何列的值对数据进行分组。要禁止将特定列用于分组，请将此列的allowGrouping属性设置为false</p><p>也就是如果将某列设置为false，那么该列就不会被拖动放到顶部分列部分。</p><h3 id="allowexporting-允许导出" tabindex="-1">allowExporting 允许导出 <a class="header-anchor" href="#allowexporting-允许导出" aria-label="Permalink to &quot;allowExporting 允许导出&quot;">​</a></h3><p>指定是否应该导出此列中的数据，仅仅当列的<a href="#visible">visible</a>为<code>true</code>时适用</p><ul><li>default：true</li><li>type：boolean</li></ul><p>如果导出具有多行标题的DataGrid，不要禁用allowExporting属性</p><h3 id="visible" tabindex="-1">visible <a class="header-anchor" href="#visible" aria-label="Permalink to &quot;visible {#visible}&quot;">​</a></h3><p>指定列是否可见，即是否占用表中的空间</p><ul><li>default：true</li><li>type：boolean</li><li>引发的事件：<a href="#onOptionChanged">onOptionsChanged</a></li></ul><h2 id="grouping" tabindex="-1">grouping <a class="header-anchor" href="#grouping" aria-label="Permalink to &quot;grouping&quot;">​</a></h2><h3 id="contextMenuEnabled" tabindex="-1">contextMenuEnabled <a class="header-anchor" href="#contextMenuEnabled" aria-label="Permalink to &quot;contextMenuEnabled {#contextMenuEnabled}&quot;">​</a></h3><h2 id="groupPanel" tabindex="-1">groupPanel <a class="header-anchor" href="#groupPanel" aria-label="Permalink to &quot;groupPanel {#groupPanel}&quot;">​</a></h2><p>DataGrid中的数据可以按一列或者多列分组。将列用于分组后，它将添加到组面板中。</p><p>默认情况下，组面板处于隐藏状态。要使其可见，必须设置<strong>groupPanel</strong>，<code>visible</code>属性设置为<code>true</code>。或者，组面板的可见性可能取决于设备的屏幕尺寸。若要实现此行为，将<code>visible</code>属性设置为<code>auto</code>。</p><p>如果需要显示组面板，但使其无响应。轻微<code>groupPanel.allowColumnDragging</code>赋值<code>false</code>。当网格记录最初被分组时，当用户需要了解该分组但不能更改它时，这很有用。</p>`,95)]))}const c=i(l,[["render",n]]);export{E as __pageData,c as default};
